// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchedulingSystem.Data.Context;

#nullable disable

namespace SmartSchedulingSystem.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250325140928_RefactorScheduleStructure")]
    partial class RefactorScheduleStructure
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.AISchedulingSuggestion", b =>
                {
                    b.Property<int>("SuggestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SuggestionId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("ScheduleRequestId")
                        .HasColumnType("int");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<string>("SuggestionData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SuggestionId");

                    b.HasIndex("ScheduleRequestId");

                    b.ToTable("AISchedulingSuggestions");
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.Classroom", b =>
                {
                    b.Property<int>("ClassroomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassroomId"));

                    b.Property<string>("Building")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("HasComputers")
                        .HasColumnType("bit");

                    b.Property<bool>("HasProjector")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassroomId");

                    b.ToTable("Classrooms");

                    b.HasData(
                        new
                        {
                            ClassroomId = 1,
                            Building = "Building A",
                            Capacity = 50,
                            HasComputers = true,
                            HasProjector = true,
                            Name = "Building A-101"
                        },
                        new
                        {
                            ClassroomId = 2,
                            Building = "Building A",
                            Capacity = 40,
                            HasComputers = false,
                            HasProjector = true,
                            Name = "Building A-202"
                        },
                        new
                        {
                            ClassroomId = 3,
                            Building = "Building B",
                            Capacity = 60,
                            HasComputers = true,
                            HasProjector = true,
                            Name = "Building B-305"
                        });
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.ClassroomAvailability", b =>
                {
                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<int>("TimeSlotId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.HasKey("ClassroomId", "TimeSlotId");

                    b.HasIndex("TimeSlotId");

                    b.ToTable("ClassroomAvailabilities");

                    b.HasData(
                        new
                        {
                            ClassroomId = 1,
                            TimeSlotId = 1,
                            IsAvailable = true
                        },
                        new
                        {
                            ClassroomId = 1,
                            TimeSlotId = 2,
                            IsAvailable = true
                        },
                        new
                        {
                            ClassroomId = 2,
                            TimeSlotId = 3,
                            IsAvailable = true
                        },
                        new
                        {
                            ClassroomId = 2,
                            TimeSlotId = 4,
                            IsAvailable = true
                        });
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WeeklyHours")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Code = "CS101",
                            Credits = 4,
                            DepartmentId = 1,
                            Name = "Object-Oriented Programming",
                            WeeklyHours = 4
                        },
                        new
                        {
                            CourseId = 2,
                            Code = "CS102",
                            Credits = 4,
                            DepartmentId = 1,
                            Name = "Data Structures",
                            WeeklyHours = 4
                        },
                        new
                        {
                            CourseId = 3,
                            Code = "MATH101",
                            Credits = 3,
                            DepartmentId = 2,
                            Name = "Discrete Mathematics",
                            WeeklyHours = 3
                        },
                        new
                        {
                            CourseId = 4,
                            Code = "PHYS101",
                            Credits = 4,
                            DepartmentId = 3,
                            Name = "Introduction to Quantum Mechanics",
                            WeeklyHours = 4
                        });
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.CourseSection", b =>
                {
                    b.Property<int>("CourseSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseSectionId"));

                    b.Property<int>("ActualEnrollment")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("MaxEnrollment")
                        .HasColumnType("int");

                    b.Property<string>("SectionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.HasKey("CourseSectionId");

                    b.HasIndex("CourseId");

                    b.HasIndex("SemesterId");

                    b.ToTable("CourseSections");

                    b.HasData(
                        new
                        {
                            CourseSectionId = 1,
                            ActualEnrollment = 0,
                            CourseId = 1,
                            MaxEnrollment = 50,
                            SectionCode = "CS101-01",
                            SemesterId = 1
                        },
                        new
                        {
                            CourseSectionId = 2,
                            ActualEnrollment = 0,
                            CourseId = 2,
                            MaxEnrollment = 40,
                            SectionCode = "CS102-01",
                            SemesterId = 1
                        });
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            Code = "CS",
                            Name = "Computer Science"
                        },
                        new
                        {
                            DepartmentId = 2,
                            Code = "MATH",
                            Name = "Mathematics"
                        },
                        new
                        {
                            DepartmentId = 3,
                            Code = "PHYS",
                            Name = "Physics"
                        });
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.ScheduleItem", b =>
                {
                    b.Property<int>("ScheduleItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleItemId"));

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<int>("CourseSectionId")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleResultId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("TimeSlotId")
                        .HasColumnType("int");

                    b.HasKey("ScheduleItemId");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("CourseSectionId");

                    b.HasIndex("ScheduleResultId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TimeSlotId");

                    b.ToTable("ScheduleItem");
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.ScheduleResult", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int?>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<int?>("CourseSectionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int?>("TimeSlotId")
                        .HasColumnType("int");

                    b.HasKey("ScheduleId");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("CourseSectionId");

                    b.HasIndex("SemesterId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TimeSlotId");

                    b.ToTable("ScheduleResults");
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.SchedulingConstraint", b =>
                {
                    b.Property<int>("ConstraintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConstraintId"));

                    b.Property<string>("ConstraintDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstraintName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConstraintType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("ConstraintId");

                    b.ToTable("SchedulingConstraints");

                    b.HasData(
                        new
                        {
                            ConstraintId = 1,
                            ConstraintDescription = "Ensure teachers are available during scheduled time slots",
                            ConstraintName = "Teacher Availability",
                            ConstraintType = "Teacher",
                            IsActive = true,
                            Weight = 1.0
                        },
                        new
                        {
                            ConstraintId = 2,
                            ConstraintDescription = "Ensure classroom capacity meets course requirements",
                            ConstraintName = "Classroom Capacity",
                            ConstraintType = "Classroom",
                            IsActive = true,
                            Weight = 1.0
                        });
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.Semester", b =>
                {
                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SemesterId"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SemesterId");

                    b.ToTable("Semesters");

                    b.HasData(
                        new
                        {
                            SemesterId = 1,
                            EndDate = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Spring 2024",
                            StartDate = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            SemesterId = 2,
                            EndDate = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Fall 2024",
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            Code = "T001",
                            DepartmentId = 1,
                            Email = "zhang@university.edu",
                            Name = "Prof. Zhang",
                            PhoneNumber = "555-1001"
                        },
                        new
                        {
                            TeacherId = 2,
                            Code = "T002",
                            DepartmentId = 1,
                            Email = "li@university.edu",
                            Name = "Prof. Li",
                            PhoneNumber = "555-1002"
                        },
                        new
                        {
                            TeacherId = 3,
                            Code = "T003",
                            DepartmentId = 2,
                            Email = "wang@university.edu",
                            Name = "Prof. Wang",
                            PhoneNumber = "555-1003"
                        },
                        new
                        {
                            TeacherId = 4,
                            Code = "T004",
                            DepartmentId = 3,
                            Email = "zhao@university.edu",
                            Name = "Prof. Zhao",
                            PhoneNumber = "555-1004"
                        });
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.TeacherAvailability", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("TimeSlotId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.HasKey("TeacherId", "TimeSlotId");

                    b.HasIndex("TimeSlotId");

                    b.ToTable("TeacherAvailabilities");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            TimeSlotId = 1,
                            IsAvailable = true
                        },
                        new
                        {
                            TeacherId = 1,
                            TimeSlotId = 2,
                            IsAvailable = true
                        },
                        new
                        {
                            TeacherId = 2,
                            TimeSlotId = 3,
                            IsAvailable = true
                        },
                        new
                        {
                            TeacherId = 2,
                            TimeSlotId = 4,
                            IsAvailable = true
                        });
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.TimeSlot", b =>
                {
                    b.Property<int>("TimeSlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeSlotId"));

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("TimeSlotId");

                    b.ToTable("TimeSlots");

                    b.HasData(
                        new
                        {
                            TimeSlotId = 1,
                            DayOfWeek = 1,
                            EndTime = new TimeSpan(0, 9, 30, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotId = 2,
                            DayOfWeek = 1,
                            EndTime = new TimeSpan(0, 11, 30, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotId = 3,
                            DayOfWeek = 2,
                            EndTime = new TimeSpan(0, 9, 30, 0, 0),
                            StartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            TimeSlotId = 4,
                            DayOfWeek = 2,
                            EndTime = new TimeSpan(0, 11, 30, 0, 0),
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.ClassroomAvailability", b =>
                {
                    b.HasOne("SmartSchedulingSystem.Data.Entities.Classroom", "Classroom")
                        .WithMany("Availabilities")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchedulingSystem.Data.Entities.TimeSlot", "TimeSlot")
                        .WithMany("ClassroomAvailabilities")
                        .HasForeignKey("TimeSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("TimeSlot");
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.Course", b =>
                {
                    b.HasOne("SmartSchedulingSystem.Data.Entities.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.CourseSection", b =>
                {
                    b.HasOne("SmartSchedulingSystem.Data.Entities.Course", "Course")
                        .WithMany("CourseSections")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchedulingSystem.Data.Entities.Semester", "Semester")
                        .WithMany("CourseSections")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.ScheduleItem", b =>
                {
                    b.HasOne("SmartSchedulingSystem.Data.Entities.Classroom", "Classroom")
                        .WithMany()
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartSchedulingSystem.Data.Entities.CourseSection", "CourseSection")
                        .WithMany()
                        .HasForeignKey("CourseSectionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartSchedulingSystem.Data.Entities.ScheduleResult", "ScheduleResult")
                        .WithMany("Items")
                        .HasForeignKey("ScheduleResultId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartSchedulingSystem.Data.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartSchedulingSystem.Data.Entities.TimeSlot", "TimeSlot")
                        .WithMany()
                        .HasForeignKey("TimeSlotId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("CourseSection");

                    b.Navigation("ScheduleResult");

                    b.Navigation("Teacher");

                    b.Navigation("TimeSlot");
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.ScheduleResult", b =>
                {
                    b.HasOne("SmartSchedulingSystem.Data.Entities.Classroom", null)
                        .WithMany("ScheduleResults")
                        .HasForeignKey("ClassroomId");

                    b.HasOne("SmartSchedulingSystem.Data.Entities.CourseSection", null)
                        .WithMany("ScheduleResults")
                        .HasForeignKey("CourseSectionId");

                    b.HasOne("SmartSchedulingSystem.Data.Entities.Semester", "Semester")
                        .WithMany("ScheduleResults")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SmartSchedulingSystem.Data.Entities.Teacher", null)
                        .WithMany("ScheduleResults")
                        .HasForeignKey("TeacherId");

                    b.HasOne("SmartSchedulingSystem.Data.Entities.TimeSlot", null)
                        .WithMany("ScheduleResults")
                        .HasForeignKey("TimeSlotId");

                    b.Navigation("Semester");
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.Teacher", b =>
                {
                    b.HasOne("SmartSchedulingSystem.Data.Entities.Department", "Department")
                        .WithMany("Teachers")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.TeacherAvailability", b =>
                {
                    b.HasOne("SmartSchedulingSystem.Data.Entities.Teacher", "Teacher")
                        .WithMany("Availabilities")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchedulingSystem.Data.Entities.TimeSlot", "TimeSlot")
                        .WithMany("TeacherAvailabilities")
                        .HasForeignKey("TimeSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");

                    b.Navigation("TimeSlot");
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.Classroom", b =>
                {
                    b.Navigation("Availabilities");

                    b.Navigation("ScheduleResults");
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.Course", b =>
                {
                    b.Navigation("CourseSections");
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.CourseSection", b =>
                {
                    b.Navigation("ScheduleResults");
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.ScheduleResult", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.Semester", b =>
                {
                    b.Navigation("CourseSections");

                    b.Navigation("ScheduleResults");
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.Teacher", b =>
                {
                    b.Navigation("Availabilities");

                    b.Navigation("ScheduleResults");
                });

            modelBuilder.Entity("SmartSchedulingSystem.Data.Entities.TimeSlot", b =>
                {
                    b.Navigation("ClassroomAvailabilities");

                    b.Navigation("ScheduleResults");

                    b.Navigation("TeacherAvailabilities");
                });
#pragma warning restore 612, 618
        }
    }
}
